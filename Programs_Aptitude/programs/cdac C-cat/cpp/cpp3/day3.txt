
References-A reference variable is an alias that is , another name for an already existing variable.







call by value
call by address
call by refrance











----------------------------------------------------------
	Pointers			    References
1. It is a variable that points		1. It is an alias / secondary name
  to another variable.			   to an already existing memory.

2. To access the value of a 		2. No need of dereferencing to access
   variable with the help of		   a value of a variable with ref.
   a pointer, we need to do
   dereferencing explicitly.


3. We can create a pointer to		4. We can't create a reference to 
   a pointer. 				   to reference.

4. We can create a pointer		5. We can't create a ref without
   without initialization.		   initialization.
  Create a NULL pointer.		   NULL ref can't be created.

5. We can create an array		6. We can't create an array of 
	of NULL pointers.		   references (NULL);












-sum of two complex number

-copy constructor complex class-shallow copy





















new 					malloc

new is an operator			malloc is a function.

new returns a typecasted		malloc returns void pointer,
operator, so no need to 		hence it is required to type
do explicit typecasting.		cast it explicitly, before use.

We must mention the datatype	        malloc accepts only the exact
while allocating the memory		no. of bytes required, so
with new.				no need to mention datatype.

When memory is allocated with	        When memory gets allocated by
new, constructor gets called for	malloc function, constructor function
the object.				does not gets called.

Memory allocated by new is		Memory allocated by malloc is
released by the operator		released by function free.
delete.

Destr is called when memory is	        Destr is NOT called when the
released with delete			memory is released with free.

To release memory for array		To release memory for array
syntax is 					syntax is
delete[] 					free( ptr );

In case new fails to allocate	        In case malloc fails to allocate
memory, it raises a Run time 	        memory it returns a NULL.
exception called as bad_alloc.










Memory leakage - some memory is dynamically allocated and no pointer is available to access that memory; such type of wastage of memory is called Memory leakage.



Dangling pointer- a pointer which is points to "unallocated memory" is called as dangling pointer. 









-Array class
	Data member  		int size, int *ptr;
	Member function 	Array(),Array(int s),printArray(),acceptArray(),







copy construtor = to create new object from existing object.




			




shallow copy =	It is a process of copying one object to into another object.
	   	Default copy constructor always create shallow copy.

deep copy    = 	If class data member holds address of memory,then we should allocate new memory for the data member of the destination object and then we should copy contents from source object into memory of destination object. Such type of copy is called deep copy.














static - class level not object level

static data member-
If we want to share value of any data member in all object then we should declare that data member as a static.
-All the object share single copy of that static member.
-Size of object=size of all the non-static data members declared inside the class.
-Also called class level variables 

static member function -
- To access static data member outside the class we should declared static function inside class.
- call by using class name
- this pointer is not available.







const:

const data member : can not change value once it is assigned , 
const member function : can not modify data member of class.
		"mutable" data member can be midified in const function
const object : can not modify the state of object.



